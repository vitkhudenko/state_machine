apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-android'

def libraryVersionName = "0.3.5"
def artifactName = 'StateMachine'

android {

    buildFeatures {
        buildConfig = false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 31
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                from components.release

                groupId 'com.github.vitkhudenko'
                artifactId 'state_machine'
                version libraryVersionName

                artifacts {
                    artifact sourcesJar {
                        classifier 'sources'
                    }
                }

                pom {
                    name = artifactName
                    description = 'A general purpose finite-state machine written in Kotlin.'
                    url = 'https://github.com/vitkhudenko/state_machine'
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://github.com/vitkhudenko/state_machine/blob/master/LICENSE'
                        }
                    }
                }

            }
        }
    }
}
